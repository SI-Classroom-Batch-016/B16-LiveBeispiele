fun main(){
    bonus2()
}

fun bonus1() {
    val nameList: List<String> = listOf("Paul","Dieter", "Jannes", "Lukas", "Hans")
    val sortedList: MutableList<String> = mutableListOf("","", "", "", "")
    // Schreibe hier deinen Code:

    // Komplexe Art und Weise
    // index 0    // index size - 1
    // index 1    // index size - 2
    // index 2     // index size - 3
//    sortedList[sortedList.size - 1] = nameList[0]
//    sortedList[sortedList.size - 2] = nameList[1]
//    sortedList[sortedList.size - 3] = nameList[2]
//    sortedList[sortedList.size - 4] = nameList[3]
//    sortedList[sortedList.size - 5] = nameList[4]
    repeat(nameList.size){
        sortedList[sortedList.size - (it + 1)] = nameList[it]
    }


    // Simplere Variante
    sortedList.clear()

    repeat(nameList.size){
        sortedList.add(0, nameList[it])
    }


    var index = 0
    while (index < nameList.size){
        sortedList.add(0, nameList[index])
    }

    // Den Code hier drunter nicht ändern!
    val finishedlist: List<String> = listOf("Hans", "Lukas","Jannes", "Dieter", "Paul")
    if (sortedList == finishedlist) {
        println("Du hast die Aufgabe gelöst")
    } else
    {
        println("Leider noch nicht richtig, versuchs weiter!")
    }
}


/**
 * Finde die höchste Zahl in der Liste.
 * Speichere die höchste Zahl in einer Variable ab und
 * prüfe wie oft die Zahl in der Liste vorkommt.
 * Wie oft kommt sie vor? Gib beides in der Konsole aus.
 */
fun bonus2(){

    val numberList: List<Int> = listOf(
        62704, 65441, 215044, 265127, 75707, 81588, 202436, 320823, 177575, 206676, 230413, -1073, 289179, 28866, 232730, 134572, -1183, 289868, 176642, 180346, 281239, 140560, 260748, 16577, 228776, 214682, 196260, -785, 134277, 93595, 104193, 44090, 41496, 71900, 322896, 73280, 154316, 279490, 240200, 181530, 213364, 233889, 2997, 110232, 198631, 324271, 280495, 268480, 48788, 55376, 143748, 44441, 29491, 163456, 257904, 274844, 16726, 145820, 29552, 212896, 303344, 266333, 263748, 27841, 309953, 55871, 201989, 276707, 227364, 57925, 312240, 319001, 74948, 26415, 275555, 32768, 300295, 287973, 290701, 282264, 23155, 39495, 324271, 52356, 162166, 40125, 258811, 17049, 222224, 308164, 84633, 12414, 219213, 82143, 314119, 211347, 172963, 206052, 33564, 136828, 225286, 63708, 205531, 167809, 73924, 148058, 209283, 65912, 30562, 15726, 111551, 289278, 66791, 18676, 21746, 321791, 125299, 191734, 75658, 215353, 216966, 114276, 4400, 203277, 172152, 43382, 315049, 179114, 127095, 60223, 6021, 235158, 310054, 288995, 125991, 296036, 230381, 211098, 97759, 120087, 6521, 168135, 1797, 170589, 184794, 264990, 122403, 223253, 33346, 216657, 269010, 295160, 312201, 56990, 633, 105520, 174216, 58797, 7431, 233383, 75238, 16629, 134083, 255455, 313343, 220813, 9280, 10490, 72789, 324271, 295371, 60289, 152277, 79520, 38806, 39158, 324271, 159342, 298061, 65297, 241678, 224976, 71322, 255309, -471, 123811, 171910, 248405, 83664, 158100, 102219, 225182, 230941, 121220, 291084, 115273, 201683, 59317, 270585, 253527, 209385, 123816, 311557, 23578, 183943, 38967, 258358, 129420, 289498, 224997, 311123, 205078, 166003, 124042, 3355, 19838, 99673, 258219, 103088, 121814, 77826, 160836, 103833, 224348, 78365, 178236, 30782, 120637, 141356, 178992, 141618, 135343, 324271, 324271, 324271, 324271, 240578, 324271, 206809, 156464, 72666, 272111, 58652, 177567, 224783, 15745, 251349, 278634, 26345, 10615, 7773, 11868, 180617, 214387, 179348, 188724, 93886, 296412, 100353, 220060, 224904, 84809, 182121, 71969, 128399, 306794, 135399, 293773, 246853, 244839, 273344, 130371, 126593, 32192, 288754, 76770, 96566, 73131, 232894, 200775, 158545, 169518, 248600, 60405, 281882, 270530, 195382, 5982, 233787, 169503, 27497, 236688, 84022, 318922, 153615, 190505, 132482, 161200, 67966, 198916, 108159, 256831, 243640, 282649, 108179, 230932, 239392, 316666, 185807, 56216, 43203, 191990, 15727, 305750, 90866, 77164, 64169, 170707, 258726, 7367, 230911, 43609, 286818, 271573, 107405, 72763, 94877, 140590, 248884, 178552, 108937, 184868, 71335, 324271, 32124, 252980, 13935, 314025, 104677, 255669, 47482, 165831, 230059, 35954, 136943, 280105, 100587, 238229, 55790, 220680, 274305, 183036, 180198, 7014, 270344, 61478, 73178, 98685, 144155, 193870, 299830, 262807, 110180, 270248, 84619, 200948, 189381, 104802, 12655, 57076, 135049, 297476, 271272, 48026, 46495, 149134, 240779, 76553, 193636, 177348, 285267, 235183, 124518, 43670, 66927, 286950, 100074, 240959, 237405, 176008, 169243, 248491, 320279, 258448, 265633, 28544, 237901, 194569, 168780, 271708, 11273, 78377, 303852, 241392, 50972, 32835, 215406, 275408, 277906, 29092, 43569, 109141, 171675, 112514, 304154, 171076, 301085, 277967, 151944, 87446, 130565, 89063, 66244, 122339, 213534, 166658, 179878, 316689, 288332, 168503, 265481, 301973, 97768, 265898, 298970, 276078, 127749, 209913, 311376, 10866, 274425, 66494, 103337, 118393, 240326, 73042, 50935, 174747, 118397, 216212, 111422, 58461, 305878, 254236, 238061, 131274, 193919, 182148, 188438, 279723, 188575, 270907, 142955, 77123, 3564, 125163, 238127, 25666, 122976, 155826, 38556, 91864, 59259, 152054, 229215, 148675, 7450, 262195, 185356, 45133, 249024, 18030, 284320, 173363, 288194, 234354, 150465, 156319, 124752, 253305, 14490, 5802, 134992, 158463, 102914, 214370, 155225, 96275, 123228, 248606)

    // Hier drunter könnt ihr euren Code hinschreiben
    var hoechsteZahl: Int = numberList[0]
    repeat(numberList.size){
        val aktuelleZahl = numberList[it]

        if (aktuelleZahl > hoechsteZahl){
            hoechsteZahl = aktuelleZahl
        }
    }

    println("Die höchste Zahl in der Liste ist ${hoechsteZahl}")


    var zaehler = 0
    
    for (aktuelleZahl in numberList){
        if (aktuelleZahl == hoechsteZahl)
            zaehler ++
    }
    println("Diese Zahl kommt $zaehler mal vor")

    zaehler = 0
    repeat(numberList.size){
        val aktuelleZahl = numberList[it]

        if (aktuelleZahl == hoechsteZahl)
            zaehler ++
    }
    println("Diese Zahl kommt $zaehler mal vor")
}